Description: Infraestructura para un Website estatico. Asegurate de deployar en us-east-1.
Parameters:
  HostedZoneId:
    Type: AWS::Route53::HostedZone::Id
    Default: "Z04034582BJXG5I1BCJQV"
  DomainName:
    Type: String
    Default: "utilapis.com"

Resources:
  ContentBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${DomainName}
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      WebsiteConfiguration:
        ErrorDocument: "404.html"
        IndexDocument: "index.html"

  WebsiteCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref DomainName
      SubjectAlternativeNames:
        - !Sub www.${DomainName}
      ValidationMethod: DNS
      DomainValidationOptions:
        - DomainName: !Ref DomainName
          HostedZoneId: !Ref HostedZoneId
        - DomainName: !Sub www.${DomainName}
          HostedZoneId: !Ref HostedZoneId

  CloudFrontOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment:
          Ref: DomainName

  ContentBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: ContentBucket
      PolicyDocument:
        Statement:
          - Action:
              - "s3:GetObject"
            Effect: "Allow"
            Resource: !Sub arn:aws:s3:::${ContentBucket}/*
            Principal:
              CanonicalUser: !GetAtt CloudFrontOAI.S3CanonicalUserId

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !Sub ${ContentBucket}.s3.amazonaws.com
            Id: S3Origin
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${CloudFrontOAI}
        DefaultRootObject: index.html
        Enabled: true
        Aliases:
          - Ref: DomainName
          - !Sub 'www.${DomainName}'
        HttpVersion: http2
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: false
          Compress: true
          ViewerProtocolPolicy: redirect-to-https
        PriceClass: PriceClass_100
        ViewerCertificate:
          AcmCertificateArn:
            Ref: WebsiteCertificate
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2018

  Route53RecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Sub ${DomainName}.
      RecordSets:
        - Name: !Ref DomainName
          Type: A
          AliasTarget:
            DNSName: !GetAtt CloudFrontDistribution.DomainName
            HostedZoneId: Z2FDTNDATAQYW2 # Usar siempre es este ID para apuntar Route53 a CloudFront
        - Name: !Sub www.${DomainName}
          Type: A
          AliasTarget:
            DNSName: !GetAtt CloudFrontDistribution.DomainName
            HostedZoneId: Z2FDTNDATAQYW2 # Usar siempre es este ID para apuntar Route53 a CloudFront

Outputs:
  ContentBucketUrl:
    Description: Url del bucket apuntando directo a S3.
    Value: !Sub http://${ContentBucket}.s3.amazonaws.com/index.html
  CloudFrontDistributionId:
    Description: ID de la distribuci√≥n de CloudFront.
    Value: !Ref CloudFrontDistribution
  CloudFrontDistributionDomain:
    Description: Url de Cloudfront apuntando al bucket.
    Value: !GetAtt CloudFrontDistribution.DomainName
